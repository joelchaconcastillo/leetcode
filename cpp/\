class Solution {
public:
	//stones = [0,1,3,5,6,8,12,17]
	//          i
	//
    int solve(vector<int> &stones){
	int n = stones.size();
	vector<vector<bool> > dp(stones.back()+1, vector<bool> (n, false));
	dp[0][0]=true;
	for(int k=1; k <= stones.back(); k++){//jump size
	   for(int i = 0 ; i < n; i++){//check which stones are reachable from i stone
	       for(int j = 0; j < n; j++){//check if this stone is reachable
		   if( stones[j] < stones[i]-k || stones[j]>stones[i]+k)continue;//not reachable

		   dp[k][j] |= dp[k-1][i];
	       }
	       if(dp[k][i])return true;
	   }
	}
	return false;
    }
    bool canCross(vector<int>& stones) {
	 return solve(stones);
    }
};
